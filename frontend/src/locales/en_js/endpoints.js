export const endpoints = {
  title: "Inference Endpoint",
  loading: 'Loading endpoint information...',
  resourceType: 'Resource Type',
  replica: "Replica",
  summary: 'Overview',
  logDownload: 'Download Logs',
  gpuMemoryRequired: 'GPU Memory Required: ',
  detail: {
    endpointUrl: 'Inference Endpoint URL',
    modelId: 'Model ID',
    parameters: 'Parameters',
    currentEndpointReplica: 'Endpoint Replica',
    cloudResource: 'Cloud Resource',
    endpointStatus: 'Endpoint Status'
  },
  new: {
    title: "Create a new endpoint",
    desc: "Deploy your model to an endpoint,",
    guide: "View Deployment Guide",
    name: "Endpoint name",
    modelId: "Model ID",
    modelIdTip: "Please enter Model ID",
    minReplica: "Minimum number of replicas",
    maxReplica: "Maximum number of replicas",
    resource: "Resource configuration",
    resourceTip1: "You can switch to different compute resources at any time.",
    resourceTip2: "Once you switch to a paid resource, you will be charged based on your usage duration.",
    framework: "Framework",
    cluster: "Region",
    public: "Public",
    publicDesc: "Anyone on the internet can see this endpoint.",
    private: "Private",
    privateDesc: "Only you (personal) or members of your organization can see this endpoint.",
    createEndpoint: "Create",
    createSuccess: "Endpoint created successfully",
    dedicated: "Dedicated endpoint",
    tip: "Applied to the endpoint, cannot be changed after creation",
    createFail: "Failed to create endpoint",
    quantization: "Quantization",
    engineArgs: "Framework Variables",
    frameworkVersion: "Framework Version",
    frameworkVersionTip: "Please select framework version",
    frameworkInputTip: "Please fill in model id first",
    serverlessSelectPlaceholder: "please select",
    serverlessCluster: "Cluster is required",
    serverlessResource: "Resource is required",
    serverlessFramework: "Runtime Framework is required",
    serverlessDeploy: "Deploy name is required",
    autoShutdownTip: "Will automatically shut down after 1 hour of inactivity",
  },
  settings: {
    stop: "Stop",
    restart: "Restart",
    restartEndpoint: "Restart Endpoint",
    stopEndpoint: "Stop Endpoint",
    delete: "Delete",
    deleteEndpoint: "Delete Endpoint",
    delTips: "This operation",
    delTips2: "Undo, this will permanently delete",
    delTips3: "the endpoint and all its files.",
    confirmDel: "I understand and confirm deletion",
    namespaceName: "Endpoint Name/ID",
    toggleStatusSuccess: 'Updated, please wait Endpoint status change',
    statusText: "The current Endpoint is now",
    status: "Status",
    changeVisibility: "Change Endpoint visibility",
    visibility: "Endpoint visibility",
    privateVis: "Only creator or members of your organization can see",
    publicVis: "Anyone can see this endpoint",
    privateInfo: ", only the creator or organization admin can update",
    publicInfo: ", visible to anyone on the internet.",
    resource: "Resource configuration",
    resourceTip: "You can switch to different compute resources at any time. After switching to paid resources, once you switch to a paid resource, you will be charged based on your usage duration.",
    framework: "Framework",
    currentFramework: 'Current Framework',
    currentCloudResource: 'Current Cloud Resource',
    maxReplica: "Maximum number of replicas",
    minReplica: "Minimum number of replicas",
    currentMaxReplica: "Current maximum number of replicas",
    currentMinReplica: "Current minimum number of replicas",
  },
  playground: {
    title: "Playground",
    parameters: "Parameters",
    generation: "Text Generation",
    json: "JSON Output",
    maximum: "Maximum",
    exitFullscreen: "Exit Fullscreen",
    send: "Send",
    test: "Inference API",
    api: "Send requests to endpoint",
    useToken: 'Use my token',
    wgTit: 'Test your endpoint',
    wgDec: 'Text-to-Image',
    wgBtn: 'Compute',
    imageText: 'Image text to text',
    retry: "retry",
    undo: "undo",
    clear: "clear",
  },
  analysis: {
    selectPeriod: "Select a time period",
    selectedInstance: "Selected instance",
    noInstances: "No running instances",
    httpCount: "HTTP Requests(num)",
    httpCountForLatency: "HTTP Requests(num) for latency",
    cpuUsage: "CPU Usage(%)",
    memoryUsage: "Memory Usage(GB)",
    refresh: "refresh",
    replica: "Replica",
    totalRequests: "Total Requests",
    thirty_m: "Last 30 miniutes",
    one_h: "Last 1 hour",
    three_h: "Last 3 hours",
    six_h: "Last 6 hours",
    twelve_h: "Last 12 hours",
    one_d: "Last 1 day",
    three_d: "Last 3 days",
    one_w: "Last 1 week",
    usageInPercent: "Usage in percent",
    usageInGb: "Usage in GB",
  }
}