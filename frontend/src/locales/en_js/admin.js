export const admin = {
  title: 'Title',
  name: 'Name',
  nickname: 'Nickname',
  showname: 'Show Name',
  category: 'Category',
  email: 'Email',
  phone: 'Phone',
  avatar: 'Avatar',
  roles: 'Roles',
  scope: 'Scope',
  group: 'Group',
  owner: 'Owner',
  creator: 'Creator',
  visibility: 'Visibility',
  sensiCheckStatus: 'SensiCheckStatus',
  createdAt: 'Created At',
  createBy: 'Created By',
  search: 'Search',
  weight: 'Weight',
  origin: 'Origin',
  baseConfigTitle: 'Basic Settings',
  menuSystem: 'System',
  menuAccount: 'Account',
  menuHub: 'Hub',
  createSuccess: 'Create Success',
  updateSuccess: 'Update Success',
  operations: 'Operations',
  dashboard: {
    title: 'Admin Dashboard',
    intro: 'This is the admin panel, admin users can do the system settings here.'
  },
  systemConfig: {
    title: 'System Config'
  },
  syncSetting: {
    title: 'Multi-Sync',
    settingTitle: 'Sync Setting',
    concurrent: 'Concurrent Task',
    bandwidth: 'Bandwidth Limit (MB)',
    submit: 'Submit',
    update: 'Update',
    queues: 'Sync Queue',
    defaultTokenAlert: 'Current using the default multi-sync token, only support viewing and not support syncing. If you need to sync, please register on the OpenCSG community.'
  },
  users: {
    title: 'User Management',
    userList: 'Users List',
    userCount: 'users',
    userDetailBtn: 'Detail',
    userDetailTitle: 'User Detail',
    editBtn: 'Edit',
    editCancelBtn: 'Cancel',
    editConfirmBtn: 'Confirm'
  },
  models: {
    title: 'Model',
    modelList: 'Model List',
    modelCount: 'models',
    modelDetails: 'Model Details',
    modelEdit: 'Model Edit',
    modelDetailBtn: 'Detail',
    setWeight: 'Set weight',
    setModelWeight: 'Set model weight',
    weightPlaceholder: 'Enter weight',
    sync: 'Sync',
    source: {
      modelscope: 'ModelScope',
      huggingface: 'HuggingFace',
      opencsg: 'OpenCSG',
      other: 'Other',
      userUpload: 'User Upload'
    }
  },
  serverless: {
    title: 'Serverless APIs',
    listTitle: 'Serverless List',
    serverlessCount: 'serverless',
    detailTitle: 'Serverless Detail',
    newTitle: 'New Serverless',
    editTitle: 'Edit Serverless',
    detail: 'Serverless Detail',
    create: 'New Serverless',
    edit: 'Edit',
    opSuccess: 'Operation Success',
    cluster: 'Cluster',
    deployName: 'Deploy Name',
    modelId: 'Model ID',
    env: 'ENV Config',
    maxReplica: 'Max Replica',
    minReplica: 'Min Replica',
    resource: 'Resource',
    runtimeFramework: 'Runtime Framework',
    status: 'Status',
    submit: 'Submit',
    stop: 'Stop',
    restart: 'Restart',
    stopSuccess: 'Stop Success',
    stopFailed: 'Stop Failed',
    restartSuccess: 'Restart Success',
    restartFailed: 'Restart Failed',
    runningLogs: 'Running Logs'
  },
  tags: {
    title: 'Tag Management',
    category: 'Tag Category',
    newTag: 'Create Tag',
    editTag: 'Edit Tag',
    tagList: 'Tags List',
    tagCount: 'tags',
    tagDetailBtn: 'Detail',
    tagDetailTitle: 'Tag Detail',
    searchPlaceholder: 'Search Tag',
    create: 'Create',
    editBtn: 'Edit',
    editCancelBtn: 'Cancel',
    editConfirmBtn: 'Confirm',
    delete: 'Delete',
    deleteConfirm: 'Confirm Delete',
    opSuccess: 'Operation Success',
    newCategoryNotes: "If you need a new tag category, you can create it and then create new tag for it" ,
    newCategoryBtn: "New Category",
    editCancelBtn: 'Cancel',
    editConfirmBtn: 'Confirm',
    newCategory: 'New Category',
    scope: 'Repo Scope',
    name: 'Name',
    showName: 'ZH Name'
  },
  tagCategories: {
    title: 'Tag Category Management',
    listTitle: 'Tag Category List',
    categoryCount: 'tag categories',
    newTitle: 'Create Tag Category',
    editTitle: 'Edit Tag Category',
    searchPlaceholder: 'Search Tag Category',
    create: 'Create',
    edit: 'Edit',
    delete: 'Delete',
    deleteConfirm: 'Confirm Delete',
    opSuccess: 'Operation Success',
    submit: 'Submit',
    name: 'Name',
    showName: 'Show Name',
    scope: 'Scope',
    enabled: 'Enabled'
  },
  broadcasts: {
    title: 'Broadcast',
    searchPlaceholder: '',
    create: 'Create',
    update: 'Update',
    edit: 'Edit',
    list: 'Broadcasts',
    bc_type: "Type",
    theme: "Theme",
    status: "Status",
    content: "Content"
  },
}
