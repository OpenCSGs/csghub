export const models = {
  title: "模型",
  placeholder: "模型名字",
  newTips:'近兩周新增模型',
  downloadModel: "下載模型數據",
  download: "下載模型",
  modelName: "模型名稱",
  modelNameTips: "應用於模型路徑，創建後不可更改",
  namespaceModelName: "命名空間/模型名稱",
  modelNickName: "模型別名",
  modelDesc: "模型介紹",
  modelTag: "模型標籤",
  modelIndustryTag: "模型行業標籤",
  modelsUsedToTrain: "關聯模型",
  tips: "創建並上傳模型文件",
  currentModel: "當前模型",
  expendModel: "展開模型",
  collapseModel: "收起模型",
  modelCount: "{count}個模型",
  modelTreeDesc: "模型樹：",
  baseModel: "基座模型",
  mergeModel: "融合模型",
  report:'评测:',
  reportTit:'评测报告',
  testReport:'漏洞测试报告',
  testReportDec:'对所提交的模型的安全能力进行测试，共覆盖模型代码层、模型权重层以及模型算子层等。',
  reportName:'君同未来',
  reportTip:'此模型已通過模型評測',
  index: {
    allFilter: "所有模型",
    inferenceFilter: "支持模型推理",
    finetuneFilter: "支持模型微调",
    evaluationFilter: "支持模型评测",
    serverlessFilter: "公共推理实例"
  },
  newModel: {
    title: "新建模型倉庫",
    titleDesc: "倉庫包含所有的模型文件和修訂的歷史記錄",
    owner: "所有者",
    modelName: "模型名稱",
    modelNickName: "模型別名",
    license: "許可證",
    modelDesc: "模型介紹",
    public: "公開",
    publicDesc:
      "任何互聯網上的人都可以看到這個倉庫。只有你（個人）或你所在組織的成員可以提交。",
    private: "私有",
    privateDesc: "只有你（個人）或你所在組織的成員可以看到並提交到這個倉庫。",
    tips: "創建模型後，你可以使用網頁或 Git 上傳你的文件。",
    createModel: "創建模型",
    createSuccess: "模型創建成功",
    tip: "應用於模型數據，創建後不可更改",
    createFail: "模型創建失敗",
    modelEnName: "模型英文名稱",
  },
  edit: {
    tips: "將會顯示在模型列表頁面中，選填",
    tips2: "一段關於模型的介紹，選填",
    tips3: "選擇模型對應的分類標籤，便於用戶在篩選時更快地找到您的模型。",
    changeVisibility: "修改模型可見性",
    statusText: "當前模型目前是",
    status: "狀態。",
    modelVisibility: "模型可見性",
    delModel: "刪除模型",
    canNot: "無法",
    delTips: "此操作",
    delTips2: "撤銷，這將永久刪除",
    delTips3: "模型倉庫及其所有文件。",
    privateVis: "只有創建者或組織成員可見",
    publicVis: "任何人都可以看到此模型",
    confirmDel: "我已知曉，確認刪除",
    privateInfo: "，僅創建者或者組織管理員可進行提交",
    publicInfo: "，任何互聯網上的人都可以看到此模型",
    needModelName: "請先提供模型別名",
    needModelDesc: "請先提供模型介紹",
    needModelTag: "請先提供模型標籤"
  },
  emptyModels: {
    title: "使用多源同步功能豐富模型",
    desc: "多源同步可將 OpenCSG 開源社區以及 Huggingface 的優質模型同步到項目中",
    uploadBtn: "上傳本地模型",
    multisyncBtn: "開啟多源同步"
  },
  metadata: {
    architecture: "架構",
    modelSize: "模型大小",
    tensorType: "Tensor 類型",
  },
}